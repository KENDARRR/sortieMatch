

EX:

text = "wawawowiewashingtwosomeforsomeone"
pat = "woso"
____________________________________________________________________________________________________
+-0+-1+-2+-3+-4+-5+-6+-7+-8+-9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+
| w| a| w| a| w| o| w| i| e| w| a| s| h| i| n| g| t| w| o| s| o| m| e| f| o| r| s| o| m| e| o| n| e|
____________________________________________________________________________________________________
aefghimnostw

We create an array of lists, where each list corresponds to a character in our
alphabet. Each stack has a counter to keep track of how many time that
character appears. We'll do all lower case characters for simplicity.


//Array of lists
inTab = {
	a = NULL
	b = NULL
	.
	.
	.
	z = NULL
}

//Array of counters

cTab = {
	a = 0
	b = 0
	.
	.
	.
	z = 0
}

//------After being filled

inTab = {
	a = 1,3,10
	e = 8,22,29,32
	f = 23
	g = 15
	h = 12
	i = 7,13
	m = 21,28
	n = 14,31
	o = 5,18,20,24,27,30
	r = 25
	s = 11,19,26
	t = 16 
	w = 0,2,4,6,9,17
}

cTab = {
	a = 3
	e = 4
	f = 1
	g = 1
	h = 1
	i = 2
	m = 2
	n = 2
	o = 6
	r = 1
	s = 3
	t = 1
	w = 6
}

Once the tables are filled out, the algorithm finds the character in out
pattern that occurs the fewest times in the text, this will be our anchor, A.

For the example, pat = "woso":
 - w occurs 6 times
 - o occurs 6 times
 - s occurs 3 times

Our anchor is character is 's'

To check for our text, we pop the first index off inTab['s'], this is index 11.
If the pattern appears in our text,
   then for some inTab['s'] = A, the following will be true.

	text[A - 2], text[A - 1], text[A], text[A + 1] == w o s o

We substitute the index from the list int for the s in our pattern.

	A = 11 
	text[9] text[10] text[11] text[12] = w a s h != w o s o
	Nope!

	A = 19
	text[17] text[18] text[19] text[20] = w o s o == w o s o
	Found!

This means we'll never string compare more than the number of times A occurs.

Unfortuantely, building the data structure can take more time than hoorspools.

//-----------------------

t2.in is a testfile, to use type: ./a.out < t2.in


